- CI/CD refers to the practices of continuous integration and either continuous delivery or continuous deployment. CI/CD is a best practice for devops teams enabling developers to deliver frequent changes reliably.
Continuous Integration (CI) ensures that all the code components work together smoothly. A CI build environment enables you to integrate newly developed code frequently, at least every day, if not every hour, depending on how quickly the project changes. Continuous delivery (CD) begins where CI ends. The CI process automatically builds and tests your code, then CD deploys all code changes in a build to a testing or staging environment. 

- A build tool transforms your source code into the binaries needed for installation. Build tools organize your source code, set compile flags, and manage dependencies. They are most important in environments where there are many inter-connected projects, with multiple developers contributing to each project.

Some examples of build tools are: Webpack – a module bundler for JavaScript. Babel – a JavaScript compiler. And Web Assembly - a binary instruction format that runs in your browser.

- Now that you have your app developed and tested, you’re ready to deploy. But how does that happen? The app needs to be simple and trouble-free for the user to install, so a commonly used technique is to collect all the necessary files and bundle them together into a package. Packages are archive files that contain the app files, instructions for installation, and any metadata that you choose. They have their own metadata too, including the package description, package version, and any dependencies, like other packages that need to be installed beforehand.

- Once you have bundled your app into a package, you can use a package manager to distribute it. Package managers take care of the tasks of finding, installing, maintaining or uninstalling. software packages at the user's request. Package management systems: Coordinate with file archivers to extract package archives. 

On Linux - Debian Package Management System (DPKG). Red Hat Package Manager (RPM). On Windows - Chocolatey. On Android - Package Manager. On MacOS - Homebrew and MacPorts.

Any libraries or utility code that is developed as part of the application is managed with the cloud application package managers. Here are some examples of package managers for popular languages: For Node.js/Javascript - npm. For Java - Gradle and Maven. For Ruby - RubyGems. For Python - Pip and Conda. In this video you’ve learned about some of the tools that you will utilize in your career as a developer , including: CI/CD, Build Tools, Packages, and Package Managers.
On Linux - Debian Package Management System (DPKG). Red Hat Package Manager (RPM). On Windows - Chocolatey. On Android - Package Manager. On MacOS - Homebrew and MacPorts.: Added to Selection. Press [CTRL + S] to save as a note
en
​
