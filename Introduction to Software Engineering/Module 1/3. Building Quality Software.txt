There are numerous processes that are common to software engineering projects. we'll discuss six of them: requirements gathering, design, coding for quality, testing, releases, and documenting. 

The software requirements specification, or SRS, encompasses the process of collecting and documenting the set of requirements that the software needs to adhere to. It may include a set of use cases that describe the business needs and user flows that the software must implement. Software requirements can be classified into four broad categories: functional, external and User Interface, or UI, system features, and non-functional.

- Software design is the process of transforming the requirements into a structure that is implementable using code. The design communicates business rules and application logic, application programming interface design, which is how apps talk to each other or communicate with the database, user interfaces, and database design.

- Code quality refers to the characteristics of the code including attributes such as maintainability, readability, testability, and security. Quality code must fulfill the intended requirements of the software without defects. Additionally, it should be clean and consistent, easy to read and maintain, well documented, and efficient. Coding for quality entails following a set of coding practices during development. These include: following common coding standards, conventions, patterns and styles, using automated tools, known as linters, to detect programmatic and stylistic errors, and commenting in the code itself to make it easy for others to understand and modify. 

- Software testing is the process of verifying that the software matches established requirements and is free of bugs. Its purpose is to identify errors, gaps, or missing requirements when compared with stated requirements. 

- When the newest version of the software is distributed, it is referred to as a “release.” Different types of releases are intended for different audiences. There is generally an “alpha,” a “beta,” and a “GA” release. GA stands for general availability. The alpha release is the first functioning version of the system released to a select group of stakeholders. The alpha release likely contains errors and may not contain the full feature set but does contain most of the desired functionality. Design changes may still occur during this release stage. The beta release, also called a limited release, is given to the stakeholders outside of the developing organization. One of the intents of the beta release is to try out the software under real conditions, test the functionality, and identify any outstanding bugs or errors. The beta release should meet all the functional requirements. Then, after beta release changes are agreed upon, made, and tested, and a stable version is released. The audience for the GA release is all users. Software documentation should be provided to both non-technical end-users and technical users.

- System documentation is geared towards the technical user. Technical users may be other engineers, developers, or architects. System documentation explains how the software operates or how to use it. It consists of README files, inline comments, architecture and design documents, verification information, and maintenance guides.

